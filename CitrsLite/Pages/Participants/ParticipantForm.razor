@page "/participant/add"
@using CitrsLite.Business.ViewModels.ParticipantViewModels
@using CitrsLite.Business.Enums
@using Microsoft.AspNetCore.Components.Authorization
@inject CitrsLite.Business.Services.ParticipantService participantService
@inject AuthenticationStateProvider authenticationStateProvider

<EditForm Model=@Model OnSubmit="@CreateParticipant">
    
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" md="6" xl="4">
            <MudCard Class="pa-2">
                <MudText Typo="Typo.h4" Align="Align.Center">Participant Form</MudText>
                <MudCardContent>
                    <DataAnnotationsValidator />
                    <MudText Color="Color.Error">
                        <ValidationSummary></ValidationSummary>
                    </MudText>
                    
                    <MudTextField Label="Name" 
                        @bind-Value="Model.Name" 
                        Variant="Variant.Outlined" 
                        Required="true" 
                        For="(() => Model.Name)" />
                    <MudSelect Label="Participant Type" 
                        T="string" 
                        @bind-Value="Model.Type" 
                        Variant="Variant.Outlined"
                        Required="true">
                        @foreach (var partType in Enum.GetValues(typeof(ParticipantType)))
                        {
                            <MudSelectItem Value="@partType.ToString().Replace("_", " ")" />
                        }
                    </MudSelect>
                    <MudTextField Label="Description" 
                        @bind-Value="Model.Description" 
                        Variant="Variant.Outlined"
                        Lines="5" />
                    <MudTextField Label="Phone" 
                        @bind-Value="Model.PhoneNumber"
                        Variant="Variant.Outlined"
                        InputType="InputType.Telephone"
                        Required="true"
                        For="(() => Model.PhoneNumber)" />
                    <MudTextField Label="Street Address" 
                        @bind-Value="Model.Address" 
                        Variant="Variant.Outlined" 
                        Required="true" />
                    <MudTextField Label="City" 
                        @bind-Value="Model.City"
                        Variant="Variant.Outlined"
                        Required="true" />
                    <MudTextField Label="State" 
                        @bind-Value="Model.State" 
                        Variant="Variant.Outlined" 
                        Required="true" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Success">
                                
                        Save
                    </MudButton>                    
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {

    private String Message = String.Empty;    

    public void CreateParticipant(EditContext context)
    {
        var valid = context.Validate();

        if (valid)
        {
            participantService.Create(Model);
        }
        else
        {
            Message = "Error"; 
        }

    }    


    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();

        Model.UserName = authState.User.Identity?.Name ?? "Unknown user";
    }

    [Inject]
    public ParticipantFormViewModel Model { get; set; }

}
