@page "/participant/add"
@using CitrsLite.Business.ViewModels.ParticipantViewModels
@using CitrsLite.Business.Enums
@using Microsoft.AspNetCore.Components.Authorization
@inject CitrsLite.Business.Services.ParticipantService participantService
@inject AuthenticationStateProvider authenticationStateProvider

<h2>Participant Form</h2>

<EditForm Model=@Model OnValidSubmit="CreateParticipant">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" md="6" xl="4">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Name" @bind-Value="Model.Name" For="(() => Model.Name)" />
                    <MudSelect T="string" Label="Participant Type" @bind-Value="Model.Type">
                        @foreach (var partType in Enum.GetValues(typeof(ParticipantType)))
                        {
                            <MudSelectItem Value="@partType.ToString().Replace("_", " ")" />
                        }
                    </MudSelect>
                    <MudTextField Label="Description" @bind-Value="Model.Description" Lines="5" />
                    <MudTextField Label="Phone" @bind-Value="Model.PhoneNumber" InputType="InputType.Telephone" />
                    <MudTextField Label="Street Address" @bind-Value="Model.Address" />
                    <MudTextField Label="City" @bind-Value="Model.City" />
                    <MudTextField Label="State" @bind-Value="Model.State" />                    
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" 
                            Color="Color.Success" 
                            Variant="Variant.Filled" 
                            OnClick="@CreateParticipant">
                        Save
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private String Message = String.Empty;

    public void CreateParticipant()
    {
        participantService.Create(Model);
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();

        Model.UserName = authState.User.Identity?.Name ?? "Unknown user";
    }

    [Inject]
    public ParticipantFormViewModel Model { get; set; }
}
